{"version":3,"sources":["reducers/topicReducer.js","reducers/index.js","actions/types.js","store.js","components/Topic.js","containers/Landing.js","actions/topicActions.js","App.js","serviceWorker.js","index.js"],"names":["initialState","topic","topics","msg","success","combineReducers","state","action","type","payload","middleware","thunk","createStore","rootReducer","compose","applyMiddleware","Topic","props","addTopic","Col","className","lg","md","sm","onClick","addHandle","Card","style","borderStyle","height","backgroundColor","color","borderWidth","CardBody","Row","map","i","key","id","title","CardText","position","right","upVoteHandle","upvote","left","downVoteHandle","downvote","Landing","toggle","setState","modal","changeHandle","e","target","name","value","submitHandle","preventDefault","data","uuidv4","length","storeTopic","setTimeout","upVoteTopic","downVoteTopic","this","getTopics","nextProps","Modal","isOpen","Form","onSubmit","ModalHeader","ModalBody","Input","placeholder","onChange","ModalFooter","Button","bottom","width","zIndex","UncontrolledAlert","sort","b","a","parseInt","Component","actionCreators","dispatch","sessionStorage","getItem","JSON","parse","setItem","stringify","findTopic","findIndex","filter","splice","connect","App","store","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.554cbeb2.chunk.js","sourcesContent":["import { GET_TOPICS, STORE_TOPIC, UPVOTE_TOPIC, DOWNVOTE_TOPIC } from '../actions/types';\r\n\r\nconst initialState = {\r\n\ttopic: {},\r\n\ttopics: [],\r\n\tmsg: '',\r\n\tsuccess: true\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase GET_TOPICS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttopics: action.payload\r\n\t\t\t};\r\n\t\tcase STORE_TOPIC:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttopics: action.payload,\r\n\t\t\t\tmsg: 'New Topic Added',\r\n\t\t\t\tsuccess: true\r\n\t\t\t};\r\n\t\tcase UPVOTE_TOPIC:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttopics: action.payload,\r\n\t\t\t\tmsg: 'Up Vote Added',\r\n\t\t\t\tsuccess: true\r\n\t\t\t};\r\n\t\tcase DOWNVOTE_TOPIC:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttopics: action.payload,\r\n\t\t\t\tmsg: 'Down Vote Added',\r\n\t\t\t\tsuccess: false\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport topicReducer from './topicReducer';\r\n\r\nexport default combineReducers({\r\n\ttopics: topicReducer\r\n});\r\n","export const GET_TOPICS = 'GET_TOPICS';\r\nexport const STORE_TOPIC = 'STORE_TOPIC';\r\nexport const UPVOTE_TOPIC = 'UPVOTE_TOPIC';\r\nexport const DOWNVOTE_TOPIC = 'DOWNVOTE_TOPIC';\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {},\r\n\tmiddleware = [ thunk ];\r\n\r\nexport default createStore(\r\n\trootReducer,\r\n\tinitialState,\r\n\tcompose(\r\n\t\tapplyMiddleware(...middleware),\r\n\t\t// window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\t)\r\n);\r\n","import React from 'react';\r\nimport { Card, CardText, CardBody, Row, Col } from 'reactstrap';\r\n\r\nconst Topic = (props) => {\r\n\tconst addTopic = (\r\n\t\t<Col className=\"my-3\" lg={3} md={3} sm={6} onClick={props.addHandle}>\r\n\t\t\t<Card\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tborderStyle: 'round',\r\n\t\t\t\t\theight: '210px',\r\n\t\t\t\t\tbackgroundColor: '#cecece',\r\n\t\t\t\t\tcolor: '#fff',\r\n\t\t\t\t\tborderWidth: '7px'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<CardBody className=\"d-flex justify-content-center align-items-center\">\r\n\t\t\t\t\t<h3>\r\n\t\t\t\t\t\tAdd New Topic <i className=\"fas fa-plus\" />\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t</Col>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t{props.topics &&\r\n\t\t\t\tprops.topics.map(\r\n\t\t\t\t\t(topic, i) =>\r\n\t\t\t\t\t\ti < 20 && (\r\n\t\t\t\t\t\t\t<Col className=\"my-3\" lg={3} md={3} sm={6} key={topic.id}>\r\n\t\t\t\t\t\t\t\t<Card style={{ height: '210px' }}>\r\n\t\t\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"text-center\">{topic.title}</h4>\r\n\t\t\t\t\t\t\t\t\t\t<CardText className=\"d-flex mt-5\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"ml-auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ position: 'relative', right: '50px' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => props.upVoteHandle(topic.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-2x fa-thumbs-up\" style={{ color: 'green' }} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{topic.upvote}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"mr-auto\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ position: 'relative', left: '50px' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => props.downVoteHandle(topic.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-2x fa-thumbs-down\" style={{ color: 'red' }} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{topic.downvote}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</CardText>\r\n\t\t\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t{addTopic}\r\n\t\t</Row>\r\n\t);\r\n};\r\n\r\nexport default Topic;\r\n","import React, { Component } from 'react';\r\nimport Topic from '../components/Topic';\r\nimport {\r\n\tButton,\r\n\tModal,\r\n\tModalHeader,\r\n\tRow,\r\n\tCol,\r\n\tUncontrolledAlert,\r\n\tModalBody,\r\n\tModalFooter,\r\n\tInput,\r\n\tForm\r\n} from 'reactstrap';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { getTopics, storeTopic, upVoteTopic, downVoteTopic } from '../actions/topicActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Landing extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tmodal: false,\r\n\t\t\ttitle: '',\r\n\t\t\tmsg: ''\r\n\t\t};\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getTopics();\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tthis.setState({ msg: nextProps.topics.msg });\r\n\t\tsetTimeout(() => this.setState({ msg: '' }), 5000);\r\n\t}\r\n\ttoggle = () => this.setState({ modal: !this.state.modal });\r\n\r\n\tchangeHandle = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n\tsubmitHandle = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst { title } = this.state,\r\n\t\t\tdata = { id: uuidv4(), title, upvote: 0, downvote: 0 };\r\n\t\ttitle.length < 255\r\n\t\t\t? this.props.storeTopic(data)\r\n\t\t\t: this.setState({ msg: 'Max Title Length is 255' }, () =>\r\n\t\t\t\t\tsetTimeout(() => this.setState({ msg: '' }), 5000)\r\n\t\t\t\t);\r\n\t\tthis.setState({ title: '' });\r\n\t\tthis.toggle();\r\n\t};\r\n\r\n\tupVoteHandle = (id) => {\r\n\t\tthis.props.upVoteTopic(id);\r\n\t};\r\n\r\n\tdownVoteHandle = (id) => {\r\n\t\tthis.props.downVoteTopic(id);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { topics, success } = this.props.topics,\r\n\t\t\t{ msg } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"mt-3 mx-3\">\r\n\t\t\t\t<Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n\t\t\t\t\t<Form onSubmit={this.submitHandle}>\r\n\t\t\t\t\t\t<ModalHeader toggle={this.toggle}>Topic title</ModalHeader>\r\n\t\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tplaceholder=\"title\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.title}\r\n\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\tonChange={this.changeHandle}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t\t<Button color=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\t\t\tAdd Topic\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button color=\"secondary\" onClick={this.toggle}>\r\n\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Modal>\r\n\r\n\t\t\t\t{msg && (\r\n\t\t\t\t\t<Row\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tposition: 'fixed',\r\n\t\t\t\t\t\t\tbottom: '10px',\r\n\t\t\t\t\t\t\tleft: '10px',\r\n\t\t\t\t\t\t\tright: '10px',\r\n\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\tzIndex: '9999'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<UncontrolledAlert color={success ? 'info' : 'danger'}>{msg}</UncontrolledAlert>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t)}\r\n\t\t\t\t{topics && (\r\n\t\t\t\t\t<Topic\r\n\t\t\t\t\t\ttopics={topics.sort((b, a) => parseInt(a.upvote) - parseInt(b.upvote))}\r\n\t\t\t\t\t\taddHandle={this.toggle}\r\n\t\t\t\t\t\tupVoteHandle={this.upVoteHandle}\r\n\t\t\t\t\t\tdownVoteHandle={this.downVoteHandle}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst actionCreators = {\r\n\tgetTopics,\r\n\tstoreTopic,\r\n\tupVoteTopic,\r\n\tdownVoteTopic\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\ttopics: state.topics\r\n});\r\n\r\nexport default connect(mapStateToProps, actionCreators)(Landing);\r\n","import { GET_TOPICS, STORE_TOPIC, UPVOTE_TOPIC, DOWNVOTE_TOPIC } from './types';\r\n\r\nexport const getTopics = () => (dispatch) => {\r\n\tconst topics = sessionStorage.getItem('topics') === null ? [] : JSON.parse(sessionStorage.getItem('topics'));\r\n\tdispatch({\r\n\t\ttype: GET_TOPICS,\r\n\t\tpayload: topics\r\n\t});\r\n};\r\n\r\nexport const storeTopic = (data) => (dispatch) => {\r\n\tconst topics = sessionStorage.getItem('topics') === null ? [] : JSON.parse(sessionStorage.getItem('topics'));\r\n\tlet addTopic = [ ...topics, data ];\r\n\tsessionStorage.setItem('topics', JSON.stringify(addTopic));\r\n\tdispatch({\r\n\t\ttype: STORE_TOPIC,\r\n\t\tpayload: addTopic\r\n\t});\r\n};\r\n\r\nexport const upVoteTopic = (id) => (dispatch) => {\r\n\tconst topics = sessionStorage.getItem('topics') === null ? [] : JSON.parse(sessionStorage.getItem('topics'));\r\n\tconst findTopic = topics.findIndex((topic) => topic.id === id),\r\n\t\tupVoteTopic = topics.filter((topic) => topic.id === id);\r\n\tupVoteTopic[0].upvote += 1;\r\n\ttopics.splice(findTopic, 1, upVoteTopic[0]);\r\n\tsessionStorage.setItem('topics', JSON.stringify(topics));\r\n\tdispatch({\r\n\t\ttype: UPVOTE_TOPIC,\r\n\t\tpayload: topics\r\n\t});\r\n};\r\n\r\nexport const downVoteTopic = (id) => (dispatch) => {\r\n\tconst topics = sessionStorage.getItem('topics') === null ? [] : JSON.parse(sessionStorage.getItem('topics'));\r\n\tconst findTopic = topics.findIndex((topic) => topic.id === id),\r\n\t\tdownVoteTopic = topics.filter((topic) => topic.id === id);\r\n\tdownVoteTopic[0].downvote += 1;\r\n\ttopics.splice(findTopic, 1, downVoteTopic[0]);\r\n\tsessionStorage.setItem('topics', JSON.stringify(topics));\r\n\tdispatch({\r\n\t\ttype: DOWNVOTE_TOPIC,\r\n\t\tpayload: topics\r\n\t});\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport Landing from './containers/Landing';\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<Landing />\r\n\t\t\t</Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}